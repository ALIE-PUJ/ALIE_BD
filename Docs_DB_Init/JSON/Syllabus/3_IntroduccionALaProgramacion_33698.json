{
    "version": "1.0",
    "last_updated": "2024-08-20",
    "title": "3_IntroduccionALaProgramacion_33698",
    "description": "Syllabus de la materia 'IntroduccionALaProgramacion' con código '33698'",
    "access_control": "privado",
    "content": {
        "Nombre Corto de la Asignatura": "Introducción a la programación",
        "Nombre Largo de la Asignatura": "Introducción a la programación",
        "Código de la asignatura": "33698",
        "Grado": "Pregrado",
        "Descripción": "La asignatura es una introducción a las estrategias para solucionar problemas utilizando el computador y a los conceptos de Programación, para estudiantes sin experiencia previa. Se desarrollan las habilidades para pensar algorítmicamente y aplicar métodos básicos de la programación para resolver problemas. El curso utiliza clases magistrales interactivas, talleres y trabajo en equipo para desarrollar un proyecto.",
        "Número de Créditos": "3",
        "Condiciones Académicas de Inscripción (Pre-requisitos)": "Sin condiciones",
        "Período Académico de Vigencia": "2430",
        "Objetivos de Formación": "Presentar estrategias para identificar información útil para caracterizar un problema y enfrentar la solución del mismo empleando el computador como herramienta.\nBrindar herramientas para la definición y desarrollo de algoritmos, así como para la representación de los mismos en un lenguaje de programación para implementar las soluciones",
        "Resultados de Aprendizaje Esperados (RAE)": "Al finalizar el curso el estudiante estará en capacidad de:\nIdentificar información que permite caracterizar un problema informático de complejidad baja,  mediante el uso de los principios básicos de Lógica e Ingeniería de Sistemas (Disciplinar 1) (CDIO 2.1) \nConocer las construcciones básicas de programación para diseñar soluciones a problemas informáticos de complejidad baja, mediante algoritmos, utilizando el pensamiento computacional. (Disciplinar 1,2) (CDIO 4.4) \nConocer los procedimientos para diseñar la organización de los datos requeridos para solucionar el problema utilizando colecciones de datos y archivos (Disciplinar 1,3,4) (CDIO 4.4) \nDeterminar las herramientas necesarias para implementar, en un lenguaje de programación, los algoritmos diseñados, permitiendo su modificación  (Disciplinar 1,2,3,4) (CDIO 4.5)",
        "Contenidos temáticos": "1. Solución de problemas\n- Ciclo de vida\n- Pensamiento Computacional\n- Abstracción\n- Algoritmos\n\n2. Construcciones básicas de programación\n- Elementos básicos de un programa\n Variables, tipos de datos, instrucciones, expresiones, asignación, E/S\n- Estilo de programación\n Convenciones, comentarios, escritura de código\n- Manejo de lenguaje de programación\n sintaxis, errores, ¿debugging¿\n- Flujo de Control\n Condicional, Iteración\n- Funciones\n Parámetros, retorno, llamada por valor\n\n3. Manejo de memoria con colecciones de datos\n- Memoria estática\n- Arreglos\n- Otras colecciones de datos\n\n4. Manejo de datos en archivos\n- Secuenciales\n- Aleatorios",
        "Estrategias Pedagógicas": "Durante el curso se utilizarán 4 estrategias. La primera de ellas será el aprendizaje directivo mediado mediante clases magistrales. La segunda el aprendizaje basado en problemas mediante talleres, iniciando con talleres individuales, y culminando con talleres en grupo, donde se expone a los estudiantes a problemas de complejidad sencilla, pero de refuerzo de los conceptos. La tercera será el aprendizaje por proyectos, donde se propone la elaboración de una solución que responda a un problema acotado. Por último, se utilizará el aprendizaje colaborativo, en el cual, a través de grupos de trabajo se logrará un intercambio de conocimientos por pares para reforzar el aprendizaje significativo.",
        "Evaluación": "Las estrategias de evaluación están centradas en la valoración de los resultados de aprendizaje esperado de la asignatura; las cuales pueden ser formativas que suscitan la comprensión y construcción de conocimiento, y sumativas que incluyen porcentajes de evaluación con el fin de corroborar el logro de los aprendizajes y el desarrollo de las competencias en los estudiantes. Las estrategias de evaluación de la asignatura son: \n\nPrimer Parcial  20% \nSegundo Parcial 20% \nTercer Parcial  20% \n\nProyecto 25% \n    Primera Entrega 7% \n    Entrega Final - Programa   8% \n    Sustentación  - 10%\n\nQuices y Talleres 15%",
        "Recursos Bibliográficos": "Solución de problemas \nBeecher Karl, Computational Thinking, BCS, 2018 \nCurzon Paul, The Power of Computational Thinking, World Scientific,2017 \nPeña, Monica, El Problema \nPolya, George, Como Plantear y Resolver Problemas, Editorial Trillas\nWod, Larry E, Estrategias de Pensamiento, Ejercicios de Agilidad Mental, Editorial Labor\nRueda Serrano, Jairo, Matemática divertida, Sistemas & Computadores \nBolt, Brian, Actividades matemáticas, Editorial Labor \nBolt, Brian, Divertimentos matemáticos, Editorial Labor \nBolt, Brian,¿ Más actividades matemáticas, Editorial Labor \nBolt, Brian, Aún más actividades matemáticas, Editorial Labor \nMataix Lorda, Mariano, Fácil, menos fácil y difícil : 100 problemas de lógica y matemáticas, Editorial Marcombo\nCastro Ch, Iván, El arte de razonar, Pontificia Universidad Javeriana 2003 \n\nAlgoritmos \nCairó Osvaldo, Metodología de la programación, Segunda Edición,AlfaOmega , 2003 \nJoyanes Aguilar, Luis Fundamentos de Programación, Ed. McGraw Hill \nJoyanes Luis, Problemas de Metodología de la Programación, Mc GrawHill \nBecerra, César Algoritmos: Conceptos Básicos , 1995 \n\nSolución de problemas utilizando un Lenguaje de Programación \nDeitel H.M., Como Programar en C/C++, Segunda Edición. Prentice Hall. 1995\nJoyanes, Luis, Programación en C++, McGraw Hill. 2000 \nSavitch Walter, Resolución de Problemas con C++, Ed. Pearson \nHetland Magnus Lie, Beginning Python, SpringerLink , 2005 \nLutz Mark, Learning Python, OReilly Media, 2013 \nPython Software Foundation, [en línea] https://www.python.org/ \nJoyanes Luis, Fundamentos de Programación, McGraw Hill. 2008 \nMata Toledo, Ramón Introducción a la programación, McGraw Hill,2001"
    }
}