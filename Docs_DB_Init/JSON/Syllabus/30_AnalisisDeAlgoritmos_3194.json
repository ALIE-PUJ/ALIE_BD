{
    "version": "1.0",
    "last_updated": "2024-08-20",
    "title": "30_AnalisisDeAlgoritmos_3194",
    "description": "Syllabus de la materia 'AnalisisDeAlgoritmos' con código '3194'",
    "access_control": "privado",
    "content": {
        "Nombre Corto de la Asignatura": "Análisis de Algoritmos",
        "Nombre Largo de la Asignatura": "Análisis de Algoritmos",
        "Código de la asignatura": "3194",
        "Grado": "Pregrado",
        "Descripción": "Aprender a evaluar matemáticamente el desempeño de un algoritmo desde el punto de vista del tiempo consumido y el espacio utilizado en la solución del problema que resuelve. Estudiar y ejercitar las principales técnicas de diseño de algoritmos. Estudiar algunos problemas denominados \"Fundamentales\" por la importancia que tienen y frecuencia con que aparecen en la programación de computadores.",
        "Número de Créditos": "2",
        "Condiciones Académicas de Inscripción (Pre-requisitos)": "Requisitos de inscripción: Estructuras de Datos /y/ (Teoría de la computación /o/ Lenguajes de Programación)",
        "Período Académico de Vigencia": "2430",
        "Objetivos de Formación": "Presentar el lenguaje formal de diseño de problemas algorítmicos. \nMostrar los diferentes tipos y clases de problemas algorítmicos. \nExponer a los estudiantes a situaciones de formalización de problemas mal condicionados. \nPresentar las principales estrategias de solución de problemas polinomiales (P). \nSolucionar algunos problemas no-determinísticos polinomiales (NP-completos) con algoritmos de aproximación bien conocidos en la literatura. \nPresentar estrategias para verificar y probar implementaciones.",
        "Resultados de Aprendizaje Esperados (RAE)": "Al finalizar el curso el estudiante estará en capacidad de:\nAnalizar diferentes alternativas de solución para problemas algorítmicos (disciplinar 1-4, CDIO 2.1). \nProponer soluciones computacionalmente adecuadas para problemas algorítmicos (Disciplinar 1-4, CDIO 2.1). \nDescribir cuándo un problema es soluble exactamente o aproximadamente por un computador (Disciplinar 1-4, CDIO 2.1). \nRelacionar el análisis formal de algoritmos con ambientes formales de ingeniería de software (Disciplinar 1-4, CDIO 4.3). \nExplicar el impacto del desarrollo de algoritmos en el uso de recursos (tiempo y almacenamiento) (Disciplinar 1-4) (CDIO 2.2 y 4.1). \nEntender los procedimientos necesarios para evaluar la calidad de un diseño algorítmico aplicado a un problema real (Disciplinar 1-4 )(CDIO 4.4)",
        "Contenidos temáticos": "Análisis asintótico. \nEstrategias básicas de resolución de problemas. \nEstrategias avanzadas de resolución de problemas. \nTractabilidad.",
        "Estrategias Pedagógicas": "Durante el curso se utilizarán 3 estrategias. La primera de ellas será el aprendizaje directivo mediado mediante clases magistrales. La segunda el aprendizaje basado en problemas mediante talleres guiados en clase, donde se expone a los estudiantes a problemas reales solubles con algoritmos. La tercera será el aprendizaje por proyectos, donde se propone la elaboración de una solución que responda a un problema algorítmico real.",
        "Evaluación": "Las estrategias de evaluación están centradas en la valoración de los resultados de aprendizaje esperado de la asignatura; las cuales pueden ser formativas que suscitan la comprensión y construcción de conocimiento, y sumativas que incluyen porcentajes de evaluación con el fin de corroborar el logro de los aprendizajes y el desarrollo de las competencias en los estudiantes. Las estrategias de evaluación de la asignatura son: \n\nPrimer parcial 20% \nSegundo parcial 20% \nTercer parcial 20% \nProyecto 20% \nQuices y talleres guiados 20%",
        "Recursos Bibliográficos": "Cormen, T. H.; Leiserson, C. E.; Rivest, R. L. & Stein, C. (2009), Introduction to Algorithms, Third Edition, The MIT Press. \nBohorquez, J.; Cardoso R. (1992), Análisis de algoritmos, Universidad de los Andes. \nAho, A. V.; Hopcroft, J. E.; Ullman, J. D. (1973), The design and analysis of computer algorithms, Addison Wesley. \nBaase, S. (1978), Computer algorithms: Introduction to design and analysis, Addison Wesley. \nBrassard, G.; Bratley, P. (1996), Fundamentos de Algoritmia, Prentice Hall. \nHorowitz, E.; Sahni, S. (1978), Fundamentals of Computer Algorithms, Computer Science Press. \nKaldewaij, A. (1990), Programming: the derivation of algorithms, Prentice-Hall. \nManber, U. (1989), Introduction to Algorithms: A Creative Approach, Addison-Wesley. \nMcConnell, J. J. (2001), Analysis of algorithms: an active learning approach. Second Edition, Sudbury, Massachusetts: Jones and Bartlett Publishers. \nParberry, I. (1995), Problems on algorithms, Prentice-Hall."
    }
}